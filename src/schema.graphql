type Query {
  users(query: String): [User]!
  outfits(query: String): [Outfit]!
  votes: [Vote]!
}
type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  outfits: [Outfit]!
  votes: [Vote]!
}

type Outfit {
  id: ID!
  top: String!
  bottom: String!
  shoes: String!
  publish: Boolean!
  author: User
  votes: [Vote!]!
}

type Vote {
  id: ID!
  outfits: Outfit!
  author: User!
}

type Mutation {
  createUser(name: String!, email: String!, age: Int): User!
  createOutfit(
    top: String!
    bottom: String!
    shoes: String!
    publish: Boolean
    author: ID!
  ): Outfit!
  signup(name: String!, email: String!, password: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  vote(outfitId: ID!): Vote
}

type AuthPayload {
  token: String
  user: User
}
